{"version":3,"sources":["store/reducers/user.js","pages/store/user/actions.js","store/reducers/tasks.js","utils/setupAxios.js","components/Navbar.js","components/SideNav.js","components/Layout.js","App.js","reportWebVitals.js","store/rootReducer.js","store/index.js","index.js"],"names":["types","initialState","token","JSON","parse","localStorage","getItem","company_id","icon","status","profile","user","state","actions","type","login","payload","details","logout","removeItem","setUserLogin","setUserDetails","deleteUser","add","delete","update","task","tasks","axios","require","exports","setupAxios","store","interceptors","request","use","config","accessToken","getState","baseURL","headers","Authorization","Navbar","dispatch","useDispatch","useSelector","className","id","to","onClick","SideNav","Layout","children","Home","lazy","Login","Error","App","fallback","exact","path","component","PrivateRoute","Component","rest","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","createStore","rootReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df08387a.chunk.js","sourcesContent":["export const types = {\n    'login': 'LOGIN_USER',\n    'logout': 'LOGOUT_USER',\n    'details': 'SET_USER'\n}\nconst initialState = {\n    token: JSON.parse(localStorage.getItem('token')),\n    company_id: \"company_0336d06ff0ec4b3b9306ddc288482663\",\n    icon: '',\n    status: '',\n    profile: JSON.parse(localStorage.getItem('profile')),\n}\nexport default function user(state = initialState, actions) {\n    switch (actions.type) {\n        case types.login:\n            return { \n                ...actions.payload,\n                company_id: \"company_0336d06ff0ec4b3b9306ddc288482663\",\n             };\n        case types.details:\n            return { ...state, profile: JSON.parse(localStorage.getItem('profile'))}\n        case types.logout:\n            return {\n                ...state,\n                token: localStorage.removeItem(\"token\"),\n                profile:localStorage.removeItem(\"profile\"),\n                icon:'',\n                status:'',\n                company_id: \"company_0336d06ff0ec4b3b9306ddc288482663\",\n            };\n        default:\n            return state;\n    }\n} ","import { types } from \"../../../store/reducers/user\";\n\nexport const setUserLogin = (payload) => ({ type: types.login, payload });\nexport const setUserDetails = (payload) => ({ type: types.details, payload });\nexport const deleteUser = () => ({ type: types.logout });\n","export const types = {\n  add: \"CREATE_TASK\",\n  delete: \"DELETE_TASK\",\n  update: \"UPDATE_TASK\",\n};\nconst initialState = {\n  task: [],\n};\nexport default function task(state = initialState, actions) {\n  switch (actions.type) {\n    case types.add:\n      return {\n        ...state,\n        tasks: actions.payload,\n      };\n    default:\n      return state;\n  }\n}\n","const axios = require(\"axios\");\nexports.setupAxios = (store) => {\n  axios.interceptors.request.use((config) => {\n    const { user } = store.getState();\n    let accessToken = user.token;\n    config.baseURL = \"https://stage.api.sloovi.com\";\n    config.headers.Authorization = accessToken ? `Bearer ${accessToken}` : \"\";\n    return config;\n  });\n};\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteUser } from '../pages/store/user/actions';\n\nfunction Navbar() {\n    const dispatch = useDispatch();\n    const { profile } = useSelector(state => state.user);\n    return (\n        <nav className=\"navbar sticky-top navbar-light bg-light\">\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                <li className=\"nav-item active\">\n                    <Link className=\"nav-link\" to=\"/spiceblue-task-manager\">Home</Link>\n                </li>\n                </ul>\n            </div>\n            {profile ? <>\n                    <Link className=\"navbar-item\" to=\"/spiceblue-task-manager\">Home</Link>\n                    <button type=\"button\" className=\"btn btn-default ml-auto mr-2\" onClick={()=>dispatch(deleteUser())}>Logout</button>\n                </>\n                : <Link to=\"/spiceblue-task-manager/login\" className=\"ml-auto mr-2\">\n                 <button type=\"button\" className=\"btn btn-default\">Login</button>\n                 </Link>\n            }\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Navbar.css\";\r\nconst SideNav = () => {\r\n  const { profile } = useSelector((state) => state.user);\r\n  return <>{profile ? <div className=\"sidenav\"></div> : \"\"}</>;\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport SideNav from \"./SideNav\";\nfunction Layout({ children }) {\n  return (\n    <div>\n      <Navbar />\n      <SideNav />\n      <div className=\"main\">{children}</div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import \"./App.css\";\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router,\n  Redirect,\n} from \"react-router-dom\";\nimport { Suspense, lazy } from \"react\";\nimport Layout from \"./components/Layout\";\nimport { useSelector } from \"react-redux\";\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst Login = lazy(() => import(\"./pages/Login\"));\nconst Error = lazy(() => import(\"./pages/Error\"));\n\nfunction App() {\n  const { profile } = useSelector((state) => state.user);\n  return (\n    <Router>\n      <Layout>\n        <Suspense fallback={<h1>Loading</h1>}>\n          <Switch>\n            <PrivateRoute exact path=\"/spiceblue-task-manager\" component={Home} profile={profile} />\n            <Route exact path=\"/spiceblue-task-manager/login\" component={Login} />\n            <Route exact path=\"/spiceblue-task-manager\" component={Login} />\n            <Route path=\"*\" component={Error} />\n          </Switch>\n        </Suspense>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n\nconst PrivateRoute = ({ component: Component, profile, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        profile ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport tasks from \"./reducers/tasks\";\nimport user from \"./reducers/user\";\nexport default combineReducers({ tasks, user });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nconst store = createStore(rootReducer);\nexport default store;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nconst { setupAxios } = require('./utils/setupAxios');\r\nsetupAxios(store);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}