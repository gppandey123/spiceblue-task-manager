{"version":3,"sources":["pages/store/user/index.js","pages/Login.js"],"names":["login","values","axios","post","getUserId","company_id","token","get","initialValues","email","password","validationSchema","Yup","required","Login","React","useState","error","setError","dispatch","useDispatch","history","useHistory","formik","useFormik","onSubmit","a","results","data","setUserLogin","localStorage","setItem","JSON","stringify","setUserDetails","push","message","className","role","style","width","handleSubmit","htmlFor","id","type","placeholder","name","getFieldProps","touched","errors"],"mappings":"gNACaA,EAAQ,SAACC,GACpB,OAAOC,IAAMC,KAAK,SAAUF,IAEjBG,EAAY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAAwB,EAAZC,MACtC,OAAOJ,IAAMK,IAAN,0BAA6BF,EAA7B,uB,8BCGHG,EAAgB,CACpBC,MAAO,iBACPC,SAAU,YAENC,EAAmBC,IAAW,CAClCH,MAAOG,MAAaH,QAAQI,SAAS,sBACrCH,SAAUE,MAAaC,SAAS,2BAkFnBC,UAhFf,WACE,MAA0BC,IAAMC,SAAS,MAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAWC,cACXC,EAAUC,cACVC,EAASC,YAAU,CACvBhB,gBACAG,mBACAc,SAAS,WAAD,4BAAE,WAAOxB,GAAP,qBAAAyB,EAAA,+EAII1B,EAAMC,GAJV,uBAGI0B,EAHJ,EAGJC,KAAQD,QAEVR,EAASU,YAAaF,IACtBG,aAAaC,QAAQ,QAASC,KAAKC,UAAUN,EAAQrB,QAN/C,SAOeF,EAAUuB,GAPzB,gBAOAC,EAPA,EAOAA,KACNE,aAAaC,QAAQ,UAAWC,KAAKC,UAAUL,EAAKD,UACpDR,EAASe,YAAeN,EAAKD,UAC7BN,EAAQc,KAAK,KAVP,kDAYNjB,EAAS,KAAMkB,SAZT,0DAAF,mDAAC,KAgBX,OACE,qCACGnB,GACC,qBAAKoB,UAAU,qBAAqBC,KAAK,QAAzC,SACGrB,IAGL,qBAAKoB,UAAU,gEAAf,SACE,sBAAKA,UAAU,OAAOE,MAAO,CAAEC,MAAO,SAAtC,UACE,qBAAKH,UAAU,cAAf,SACE,yCAEF,qBAAKA,UAAU,YAAf,SACE,uBAAMZ,SAAUF,EAAOkB,aAAvB,UACE,sBAAKJ,UAAU,aAAf,UACE,uBAAOK,QAAQ,QAAf,oBACA,mCACEC,GAAG,QACHC,KAAK,OACLP,UAAU,eACVQ,YAAY,QACZC,KAAK,SACDvB,EAAOwB,cAAc,WAE1BxB,EAAOyB,QAAQvC,OAASc,EAAO0B,OAAOxC,OACrC,uBAAO4B,UAAU,cAAjB,SAAgCd,EAAO0B,OAAOxC,WAGlD,sBAAK4B,UAAU,aAAf,UACE,uBAAOK,QAAQ,OAAf,uBACA,mCACEC,GAAG,OACHC,KAAK,WACLP,UAAU,eACVQ,YAAY,WACZC,KAAK,YACDvB,EAAOwB,cAAc,cAE1BxB,EAAOyB,QAAQtC,UAAYa,EAAO0B,OAAOvC,UACxC,uBAAO2B,UAAU,cAAjB,SACGd,EAAO0B,OAAOvC,cAIrB,qBAAK2B,UAAU,aAAf,SACE,wBAAQO,KAAK,SAASP,UAAU,kBAAhC","file":"static/js/7.fc307667.chunk.js","sourcesContent":["import axios from \"axios\";\nexport const login = (values) => {\n  return axios.post(\"/login\", values);\n};\nexport const getUserId = ({ company_id, token }) => {\n  return axios.get(`user?company_id=${company_id}&product=outreach`);\n};\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { login, getUserId } from \"./store/user/index\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserDetails, setUserLogin } from \"./store/user/actions\";\nimport { useHistory } from \"react-router-dom\";\n\nconst initialValues = {\n  email: \"good@test3.com\",\n  password: \"12345678\",\n};\nconst validationSchema = Yup.object({\n  email: Yup.string().email().required(\"Email is required.\"),\n  password: Yup.string().required(\"Password is required.\"),\n});\nfunction Login() {\n  const [error, setError] = React.useState(null);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: async (values) => {\n      try {\n        let {\n          data: { results },\n        } = await login(values);\n        dispatch(setUserLogin(results));\n        localStorage.setItem(\"token\", JSON.stringify(results.token));\n        let { data } = await getUserId(results);\n        localStorage.setItem(\"profile\", JSON.stringify(data.results));\n        dispatch(setUserDetails(data.results));\n        history.push(\"/\");\n      } catch (error) {\n        setError(error.message);\n      }\n    },\n  });\n  return (\n    <>\n      {error && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {error}\n        </div>\n      )}\n      <div className=\" h-100 w-100 d-flex justify-content-center align-items-center\">\n        <div className=\"card\" style={{ width: \"30rem\" }}>\n          <div className=\"card-header\">\n            <h3>Login</h3>\n          </div>\n          <div className=\"card-body\">\n            <form onSubmit={formik.handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                  id=\"email\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  {...formik.getFieldProps(\"email\")}\n                />\n                {formik.touched.email && formik.errors.email && (\n                  <small className=\"text-danger\">{formik.errors.email}</small>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"pass\">Password:</label>\n                <input\n                  id=\"pass\"\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  {...formik.getFieldProps(\"password\")}\n                />\n                {formik.touched.password && formik.errors.password && (\n                  <small className=\"text-danger\">\n                    {formik.errors.password}\n                  </small>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n"],"sourceRoot":""}